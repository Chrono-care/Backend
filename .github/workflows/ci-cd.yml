name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # Job for linting the code
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm ci

      - name: Lint the code
        run: npm run lint

  # Job for running tests
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  # Job for building the Docker image based on branch
  build:
    runs-on: ubuntu-latest
    needs: lint
    # needs: test # Uncomment once the tests have been created (And comment previous line: "needs: lint")
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image using Docker Compose
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker-compose -f ./.docker/docker-compose.prod.yml build
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            docker-compose -f ./.docker/docker-compose.dev.yml build
          fi

  # Job for pushing the Docker image to Docker Hub
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Git Commit SHA and Tag
        id: vars
        run: echo "VERSION=$(date +%Y%m%d%H%M%S)-${{ github.sha }}" >> $GITHUB_ENV

      - name: Tag and Push Docker Image
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            IMAGE_NAME="chrono-care-back-prod"
            TAG="prod"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            IMAGE_NAME="chrono-care-back-dev"
            TAG="dev"
          fi

          docker tag chrono-care-back:latest ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest
          docker tag chrono-care-back:latest ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:${{ env.VERSION }}

          docker push ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:${{ env.VERSION }}
