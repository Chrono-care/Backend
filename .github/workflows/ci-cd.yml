name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # Job for linting the code
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm ci

      - name: Lint the code
        run: npm run lint

  # Job for running tests
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test:e2e

  # Job for building the Docker image based on branch
  build_deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker build --target prod-ci -t back-dev:latest ./ -f ./.docker/Dockerfile
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            docker build --target dev-ci -t back-dev:latest ./ -f ./.docker/Dockerfile
          else
            echo "Branch '${{ github.ref }}' not recognized. Skipping build."
            exit 0
          fi

      - name: Verify Docker Image Creation
        run: docker images

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          # Secrets for Docker Hub login. Update these secrets in GitHub repository settings:
          # Repository > Settings > Secrets and variables > Actions > New repository secret
          # Add 'DOCKER_USERNAME' and 'DOCKER_PASSWORD' with your Docker Hub credentials.
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            IMAGE_NAME="back-prod"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            IMAGE_NAME="back-dev"
          else
            echo "Branch '${{ github.ref }}' not recognized. Skipping Docker tag and push."
            exit 0
          fi

          # Tagging the image
          VERSION=$(date +%Y%m%d%H%M%S)-${{ github.sha }}
          docker tag ${IMAGE_NAME}:latest chronocare/${IMAGE_NAME}:latest
          docker tag ${IMAGE_NAME}:latest chronocare/${IMAGE_NAME}:${VERSION}

          # Pushing the image to Docker Hub
          docker push chronocare/${IMAGE_NAME}:latest
          docker push chronocare/${IMAGE_NAME}:${VERSION}

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Run script on server with password
        run: |
          sshpass -p "H2xZAoUE3XYrM2tiyrc08pMW" ssh -o StrictHostKeyChecking=no -l dev punio.eu "bash /home/docker/update.sh"

  